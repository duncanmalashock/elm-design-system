var _user$project$DesignSystem_Typography$withTypography = F2(
	function (typeStyle, attributes) {
		var sans1 = {
			ctor: '::',
			_0: _mdgriffith$stylish_elephants$Element_Font$family(
				{
					ctor: '::',
					_0: _mdgriffith$stylish_elephants$Element_Font$typeface('Lato'),
					_1: {
						ctor: '::',
						_0: _mdgriffith$stylish_elephants$Element_Font$sansSerif,
						_1: {ctor: '[]'}
					}
				}),
			_1: {ctor: '[]'}
		};
		var attributesToAdd = function () {
			var _p0 = typeStyle;
			switch (_p0.ctor) {
				case 'HeaderL':
					return A2(
						_elm_lang$core$Basics_ops['++'],
						{
							ctor: '::',
							_0: _mdgriffith$stylish_elephants$Element_Font$size(14),
							_1: {
								ctor: '::',
								_0: _mdgriffith$stylish_elephants$Element_Font$bold,
								_1: {
									ctor: '::',
									_0: _mdgriffith$stylish_elephants$Element_Font$letterSpacing(0.5),
									_1: {
										ctor: '::',
										_0: _mdgriffith$stylish_elephants$Element_Font$color(
											_user$project$DesignSystem_Color$color(_user$project$DesignSystem_Color$MediumGrayColor)),
										_1: {ctor: '[]'}
									}
								}
							}
						},
						sans1);
				case 'HeaderM':
					return A2(
						_elm_lang$core$Basics_ops['++'],
						{
							ctor: '::',
							_0: _mdgriffith$stylish_elephants$Element_Font$size(20),
							_1: {
								ctor: '::',
								_0: _mdgriffith$stylish_elephants$Element_Font$bold,
								_1: {
									ctor: '::',
									_0: _mdgriffith$stylish_elephants$Element_Font$color(
										_user$project$DesignSystem_Color$color(_user$project$DesignSystem_Color$DarkColor)),
									_1: {ctor: '[]'}
								}
							}
						},
						sans1);
				case 'ParagraphS':
					return A2(
						_elm_lang$core$Basics_ops['++'],
						{
							ctor: '::',
							_0: _mdgriffith$stylish_elephants$Element_Font$size(14),
							_1: {
								ctor: '::',
								_0: _mdgriffith$stylish_elephants$Element_Font$color(
									_user$project$DesignSystem_Color$color(_user$project$DesignSystem_Color$MediumGrayColor)),
								_1: {ctor: '[]'}
							}
						},
						sans1);
				case 'InterfaceSDark':
					return A2(
						_elm_lang$core$Basics_ops['++'],
						{
							ctor: '::',
							_0: _mdgriffith$stylish_elephants$Element_Font$size(14),
							_1: {
								ctor: '::',
								_0: _mdgriffith$stylish_elephants$Element_Font$color(
									_user$project$DesignSystem_Color$color(_user$project$DesignSystem_Color$DarkColor)),
								_1: {ctor: '[]'}
							}
						},
						sans1);
				default:
					return A2(
						_elm_lang$core$Basics_ops['++'],
						{
							ctor: '::',
							_0: _mdgriffith$stylish_elephants$Element_Font$size(14),
							_1: {
								ctor: '::',
								_0: _mdgriffith$stylish_elephants$Element_Font$color(
									_user$project$DesignSystem_Color$color(_user$project$DesignSystem_Color$LightColor)),
								_1: {ctor: '[]'}
							}
						},
						sans1);
			}
		}();
		return A2(_elm_lang$core$Basics_ops['++'], attributes, attributesToAdd);
	});
var _user$project$DesignSystem_Typography$InterfaceSLight = {ctor: 'InterfaceSLight'};
var _user$project$DesignSystem_Typography$InterfaceSDark = {ctor: 'InterfaceSDark'};
var _user$project$DesignSystem_Typography$ParagraphS = {ctor: 'ParagraphS'};
var _user$project$DesignSystem_Typography$HeaderM = {ctor: 'HeaderM'};
var _user$project$DesignSystem_Typography$HeaderL = {ctor: 'HeaderL'};
