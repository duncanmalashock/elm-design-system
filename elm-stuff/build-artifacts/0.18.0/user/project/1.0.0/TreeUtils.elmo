var _user$project$TreeUtils$fold = F3(
	function (fn, answerSoFar, tree) {
		var _p0 = tree;
		if (_p0.ctor === 'Empty') {
			return answerSoFar;
		} else {
			return A2(
				fn,
				_p0._0,
				A3(
					_user$project$TreeUtils$fold,
					fn,
					A3(_user$project$TreeUtils$fold, fn, answerSoFar, _p0._2),
					_p0._1));
		}
	});
var _user$project$TreeUtils$flatten = function (tree) {
	var _p1 = tree;
	if (_p1.ctor === 'Empty') {
		return {ctor: '[]'};
	} else {
		return {
			ctor: '::',
			_0: _p1._0,
			_1: _elm_lang$core$List$concat(
				{
					ctor: '::',
					_0: _user$project$TreeUtils$flatten(_p1._1),
					_1: {
						ctor: '::',
						_0: _user$project$TreeUtils$flatten(_p1._2),
						_1: {ctor: '[]'}
					}
				})
		};
	}
};
var _user$project$TreeUtils$sum = function (tree) {
	var _p2 = tree;
	if (_p2.ctor === 'Empty') {
		return 0;
	} else {
		return (_p2._0 + _user$project$TreeUtils$sum(_p2._1)) + _user$project$TreeUtils$sum(_p2._2);
	}
};
var _user$project$TreeUtils$Node = F3(
	function (a, b, c) {
		return {ctor: 'Node', _0: a, _1: b, _2: c};
	});
var _user$project$TreeUtils$Empty = {ctor: 'Empty'};
